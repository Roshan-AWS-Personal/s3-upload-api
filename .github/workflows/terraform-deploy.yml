name: "Terraform Deploy"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Which environment to target (dev or prod)"
        required: true
        type: choice
        default: "dev"
        options:
          - dev
          - prod
      confirm_apply:
        description: "Set to true to run the apply step (default=false â†’ plan only)"
        required: false
        type: boolean
        default: false

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-southeast-2

      # Dev vs Prod credentials
      AWS_ACCESS_KEY_ID_DEV:     ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
      AWS_SECRET_ACCESS_KEY_DEV: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
      AWS_ACCESS_KEY_ID_PROD:    ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
      AWS_SECRET_ACCESS_KEY_PROD: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
      AWS_UPLOAD_API_SECRET_DEV: ${{ secrets.UPLOAD_API_SECRET_DEV }}
      AWS_UPLOAD_API_SECRET_PROD: ${{ secrets.UPLOAD_API_SECRET_PROD }}
      AWS_UPLOAD_API_URL_DEV:    ${{ secrets.AWS_API_URL_DEV }}
      AWS_UPLOAD_API_URL_PROD:   ${{ secrets.AWS_API_URL_PROD }}

      # Backend resources
      STATE_BUCKET_DEV:   ${{ secrets.STATE_BUCKET_DEV }}
      STATE_BUCKET_PROD:  ${{ secrets.STATE_BUCKET_PROD }}
      DYNAMODB_TABLE:     ${{ secrets.DYNAMODB_TABLE }}
      STATE_PREFIX:       ${{ secrets.STATE_PREFIX }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Select AWS credentials and bucket
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "dev" ]]; then
            echo "AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID_DEV }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY_DEV }}" >> $GITHUB_ENV
            echo "STATE_BUCKET=${{ env.STATE_BUCKET_DEV }}" >> $GITHUB_ENV
          else
            echo "AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID_PROD }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY_PROD }}" >> $GITHUB_ENV
            echo "STATE_BUCKET=${{ env.STATE_BUCKET_PROD }}" >> $GITHUB_ENV
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Determine target
        id: env
        run: |
          echo "WORK_DIR=live/${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT

      - name: Terraform Init
        working-directory: ${{ steps.env.outputs.WORK_DIR }}
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ env.STATE_BUCKET }}" \
            -backend-config="key=${{ env.STATE_PREFIX }}/${{ github.event.inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ env.DYNAMODB_TABLE }}"

      - name: Terraform Validate
        working-directory: ${{ steps.env.outputs.WORK_DIR }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ steps.env.outputs.WORK_DIR }}
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "dev" ]]; then
            SECRET=${{ env.AWS_UPLOAD_API_SECRET_DEV }}
            API_URL=${{ env.AWS_UPLOAD_API_URL_DEV }}
            COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID_DEV }}
            COGNITO_DOMAIN=${{ secrets.COGNITO_DOMAIN_DEV }}
            LOGIN_URL=${{ secrets.LOGIN_URL_DEV }}
          else
            SECRET=${{ env.AWS_UPLOAD_API_SECRET_PROD }}
            API_URL=${{ env.AWS_UPLOAD_API_URL_PROD }}
            COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID_PROD }}
            COGNITO_DOMAIN=${{ secrets.COGNITO_DOMAIN_PROD }}
            LOGIN_URL=${{ secrets.LOGIN_URL_PROD }}
          fi

          terraform plan \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="state_bucket=${{ env.STATE_BUCKET }}" \
            -var="state_prefix=${{ env.STATE_PREFIX }}" \
            -var="dynamodb_table=${{ env.DYNAMODB_TABLE }}" \
            -var="upload_api_secret=$SECRET" \
            -var="upload_api_url=$API_URL" \
            -var="login_redirect_url=$LOGIN_URL" \
            -var="logout_redirect_url=$LOGIN_URL" \
            -var="cognito_client_id=$COGNITO_CLIENT_ID" \
            -var="cognito_domain=$COGNITO_DOMAIN" \
            -out=tfplan

      - name: Terraform Apply (manual)
        if: ${{ github.event.inputs.confirm_apply == 'true' }}
        working-directory: ${{ steps.env.outputs.WORK_DIR }}
        run: terraform apply -auto-approve tfplan
